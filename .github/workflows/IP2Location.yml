name: Publish IP2Location DB
on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 1 */3 * *
jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip unzip mmdb-bin
        pip3 install ip2location-python-c

    - name: Download and Convert IP2Location DB
      run: |
        mkdir -p upload
        wget -nv -O "DB1.LITE.ZIP" "https://www.ip2location.com/download/?token=${{ secrets.IP2LOCATION_TOKEN }}&file=DB1.LITE"
        unzip DB1.LITE.ZIP
        
        # 使用 Python 脚本进行转换
        cat > convert.py << 'EOL'
        import IP2Location
        import csv
        import os

        def convert():
            database = IP2Location.IP2Location("IP2LOCATION-DB1.LITE.BIN")
            
            with open('geoip.csv', 'w', newline='') as f:
                writer = csv.writer(f)
                writer.writerow(['network', 'country_iso_code'])
                
                # 获取所有IP记录
                with open("IP2LOCATION-DB1.LITE.BIN", "rb") as f:
                    db = IP2Location.IP2Location(f)
                    for record in db:
                        writer.writerow([f"{record.ip}/{record.cidr}", record.country_short])

        if __name__ == "__main__":
            convert()
        EOL
        
        python3 convert.py
        
        # 使用 mmdb-converter 转换为 MMDB 格式
        mmdb-converter -i geoip.csv -o upload/Country.mmdb
        
        echo "TAG_NAME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Push to "download" branch
      run: |
        cd upload
        git init
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git checkout -b download
        git add .
        git commit -m "${{ env.TAG_NAME }}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f origin download

    - name: Upload to Releases
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        body: ${{ env.TAG_NAME }}
        files: upload/*.mmdb

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
