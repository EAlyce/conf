name: Merge Crypto
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  deduplicate_and_remove_empty_lines:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Create Rule directory if not exists
        run: mkdir -p Rule

      - name: Get and process domains
        run: |
          TEMP_FILE=$(mktemp)
          OUTPUT_FILE="Rule/Crypto.list"
          
          download_and_process() {
            if curl -sSfL "$1" >> "$TEMP_FILE" 2>/dev/null; then
              echo "Successfully downloaded: $1"
            else
              echo "Failed to download: $1"
            fi
          }
          
          URLS=(
            "https://raw.githubusercontent.com/yuumimi/rules/release/loon/category-cryptocurrency.txt"
            "https://github.com/carl092185/Network-tool/raw/93b195d4a043a239e0dd376d8f769402e56ddff8/Crypto.list"
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Crypto.list"
            "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Crypto/Crypto.list"
            "https://raw.githubusercontent.com/LuckySmileOne/RuleSet/3f2121047a8cd0f55b737c5fb5bf0c387aad7e29/UBank.list"
            "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Cryptocurrency/Cryptocurrency.list"
            "https://raw.githubusercontent.com/LeiyuG/Surge/main/rules/Binance.list"
            "https://raw.githubusercontent.com/LeiyuG/Surge/main/rules/Binancenew.list"
            "https://raw.githubusercontent.com/LeiyuG/Surge/main/rules/HTX.list"
            "https://raw.githubusercontent.com/LeiyuG/Surge/main/rules/TR.list"
            "https://raw.githubusercontent.com/LeiyuG/Surge/main/rules/Bybit.list"
            "https://github.com/axtyet/Luminous/raw/589629c2eb40704bf8955947e1d6335e62c129b8/Repcz/Surge/Rules/HTX.list"
            "https://github.com/mymolasses/TutuBetterRules/raw/561d00e2ef99360692a65d298d5d575655246792/Tu%CC%88rkiye.list"
          )
          
          for url in "${URLS[@]}"; do
            download_and_process "$url"
          done
          
          awk '!/^#|^\/\// && !/^$/ {gsub(/^DOMAIN,/, "DOMAIN-SUFFIX,"); gsub(/[\/\*]/, ""); gsub(/^\./, ""); gsub(/,no-resolve/, ""); gsub(/#.*$/, ""); if (!/^IP-CIDR6|^URL-REGEX|^PROCESS-NAME|^USER-AGENT/) print}' "$TEMP_FILE" | \
          awk '/^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD|IP-CIDR),/ {gsub(/\r/, ""); gsub(/[[:space:]]*$/, ""); gsub(/^DOMAIN-SUFFIX,\./, "DOMAIN-SUFFIX,"); print}' | \
          awk -F, '{
            if ($1 == "DOMAIN-SUFFIX" || $1 == "DOMAIN") {
              split($2, parts, ".");
              if (length(parts) > 2) {
                $2 = parts[length(parts)-1] "." parts[length(parts)];
              }
            }
            print $1 "," $2
          }' | \
          awk '!seen[$0]++' | \
          awk -F, '{
            if ($1 == "IP-CIDR") {
              split($2, ip, "/");
              if (ip[2] == "") {
                $2 = ip[1] "/24";
              } else if (ip[2] ~ /^0+/) {
                $2 = ip[1] "/" substr(ip[2], length(ip[2]) - 1);
              }
            }
            print $1 "," $2
          }' | \
          awk '
            BEGIN {print "# Domain Keywords"}
            /^DOMAIN-KEYWORD,/ {print}
            END {print "\n# Domains"}
            /^DOMAIN,/ {print}
            END {print "\n# Domain Suffixes"}
            /^DOMAIN-SUFFIX,/ {print}
            END {print "\n# IP CIDR"}
            /^IP-CIDR,/ {print}
          ' > "$OUTPUT_FILE"
          
          rm -f "$TEMP_FILE"

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit and push changes if needed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git diff --quiet Rule/Crypto.list; then
            git add Rule/Crypto.list
            git commit -m "Update Crypto.list [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi